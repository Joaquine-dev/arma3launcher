services:
  # Service Nginx pour servir les manifests et fichiers
  nginx:
    image: nginx:alpine
    container_name: arma3-manifest-server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./data/mods:/usr/share/nginx/html/mods:ro
      - ./data/ressources:/usr/share/nginx/html/ressources:ro
      - ./data/news:/usr/share/nginx/html/news:ro
      - ./generated:/usr/share/nginx/html/generated:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - manifest-generator
    restart: unless-stopped
    networks:
      - arma3-network

  # Service Node.js pour générer les manifests
  manifest-generator:
    build:
      context: ./manifest-service
      dockerfile: Dockerfile
    container_name: arma3-manifest-generator
    user: "1001:1001"  # Forcer l'utilisateur nodejs
    volumes:
      - ./data/mods:/app/mods:ro
      - ./data/ressources:/app/ressources:ro
      - ./data/news:/app/news:ro
      - ./generated:/app/generated
    env_file:
      - ./manifest-config.env
    environment:
      - NODE_ENV=production
      - MODS_DIR=/app/mods
      - RESSOURCES_DIR=/app/ressources
      - NEWS_DIR=/app/news
      - OUTPUT_DIR=/app/generated
    restart: unless-stopped
    networks:
      - arma3-network

  # Service pour surveiller les changements de fichiers
  file-watcher:
    build:
      context: ./file-watcher
      dockerfile: Dockerfile
    container_name: arma3-file-watcher
    volumes:
      - ./data:/app/data:ro
      - ./generated:/app/generated
    env_file:
      - ./manifest-config.env
    environment:
      - WATCH_DIR=/app/data
      - OUTPUT_DIR=/app/generated
      - MANIFEST_GENERATOR_URL=http://manifest-generator:3000
    depends_on:
      - manifest-generator
    restart: unless-stopped
    networks:
      - arma3-network


networks:
  arma3-network:
    driver: bridge

volumes:
  mods-data:
  ressources-data:
  news-data:
  generated-data:
